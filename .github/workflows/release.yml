name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run benchmarks
      run: go test -bench=. -benchmem -tags=bench
    
    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git commits since last tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -z "$PREV_TAG" ]; then
          COMMITS=$(git log --pretty=format:"- %s (%h)" HEAD)
        else
          COMMITS=$(git log --pretty=format:"- %s (%h)" ${PREV_TAG}..HEAD)
        fi
        
        # Save changelog to file
        echo "## Changes" > CHANGELOG.md
        echo "$COMMITS" >> CHANGELOG.md
        
        # Set output for GitHub release
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ```bash
          go get github.com/felixgeelhaar/bolt@${{ github.ref }}
          ```
          
          ## Verification
          
          This release has been automatically tested with:
          - âœ… All unit tests passing
          - âœ… Cross-platform compatibility
          - âœ… Performance benchmarks
          - âœ… Security scanning
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

  notify:
    needs: release
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: Notify success
      run: |
        echo "âœ… Release ${{ github.ref }} created successfully!"
        echo "ðŸ“¦ Available at: https://github.com/felixgeelhaar/bolt/releases/tag/${{ github.ref_name }}"