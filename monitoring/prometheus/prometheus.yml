# Prometheus Configuration for Bolt Logging Library
# Production-ready configuration for monitoring Bolt library performance and application metrics

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    environment: 'production'
    service: 'bolt-logging'

# Rule files specify a list of globs. Rules and alerts are read from all matching files.
rule_files:
  - "alerts/*.yml"
  - "rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configuration for monitoring targets
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s

  # Bolt application metrics
  - job_name: 'bolt-app'
    static_configs:
      - targets: ['app:8080']
    scrape_interval: 5s
    metrics_path: '/metrics'
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}'
      - source_labels: [__address__]
        target_label: __address__
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}:8080'

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: '/metrics'

  # Jaeger tracing metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    scrape_interval: 15s
    metrics_path: '/metrics'

  # Application-specific Bolt metrics
  - job_name: 'bolt-metrics'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - default
            - bolt-logging
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::[0-9]+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # High-frequency scraping for performance-critical Bolt metrics
  - job_name: 'bolt-performance'
    static_configs:
      - targets: ['app:8080']
    scrape_interval: 1s
    metrics_path: '/metrics/performance'
    params:
      format: ['prometheus']
    metric_relabel_configs:
      # Only collect Bolt-specific performance metrics
      - source_labels: [__name__]
        regex: 'bolt_(logging_duration|allocation_count|event_pool_size|handler_latency).*'
        action: keep

# Storage configuration for high-performance workloads
storage:
  tsdb:
    # Retention policy
    retention.time: 30d
    retention.size: 50GB
    
    # Performance tuning for high-frequency metrics
    min-block-duration: 2h
    max-block-duration: 25h
    
    # Compaction settings for better query performance
    wal-compression: true

# Remote write configuration for long-term storage
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    queue_config:
      capacity: 10000
      max_samples_per_send: 5000
      batch_send_deadline: 10s
      min_shards: 1
      max_shards: 200
      min_backoff: 30ms
      max_backoff: 100ms

# Query configuration optimized for Bolt metrics
query:
  # Increase timeout for complex queries
  timeout: 2m
  max_concurrency: 20
  max_samples: 50000000